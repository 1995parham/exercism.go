---
name: lint
on: push

jobs:
  projects:
    name: projects
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        run: |
          mapfile -d $'\0' projects < <(find . -maxdepth 1 -mindepth 1 -type d -not -path '*/[.]*' -printf '%P\0')
          echo -n '::set-output name=matrix::{"project": ['
          printf '"%s",' "${projects[@]}" | sed '$s/,$//'
          echo ']}'
  golangci:
    name: lint
    needs: projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.projects.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: ${{ matrix.project }}
          args: --tests=false

  go:
    name: test
    needs: projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.projects.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - run: cd ${{ matrix.project }} && go test ./...
